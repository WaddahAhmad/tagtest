name: Bump version
on:
  workflow_dispatch:
    inputs:
      upgrade_level:
        type: choice
        description: kind of update
        default: 'patch'
        options: 
        - patch
        - minor
        - major
env:
  CHANNEL: ${{ secrets.CHANNEL }} 
jobs:

  extract_tag:
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.old_tag.outputs.old_tag }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-tags: 'true'
          fetch-depth: '0'
          
      - name: Get Old Tag
        id: old_tag
        run: |
          echo "old_tag=$(git describe --tags --always $(git rev-list --tags --max-count=1))" >> "$GITHUB_OUTPUT"
          
  bump_tag:
    runs-on: ubuntu-latest
    needs: extract_tag
    outputs:
      final_tag: ${{steps.bump_tag.outputs.tag}}
    steps:
    - name: bump_tag
      id: bump_tag
      run: |
        old_tag=${{ needs.extract_tag.outputs.old_tag }}
        echo $old_tag
        echo ${{ inputs.upgrade_level }} 
        version=$(echo $old_tag | sed 's/v//')
        case ${{ inputs.upgrade_level }} in
          "patch")
            incremented_version=$(echo $version | awk -F. '{$NF = $NF + 1;} 1' | sed 's/ /./g')
            ;;
          "minor")
            incremented_version=$(echo $version | awk -F. '{$(NF-1) = $(NF-1) + 1; $NF = 0 } 1' | sed 's/ /./g')
            ;;
          "major")
            incremented_version=$(echo $version | awk -F. '{$(NF-2) = $(NF-2) + 1; $NF = 0; $(NF-1) = 0 } 1' | sed 's/ /./g')
            ;;
          *)
            echo "Invalid upgrade level specified."
            exit 1
            ;;
        esac
        incremented_tag="v${incremented_version}"
        echo "tag=${incremented_tag}" >> "$GITHUB_OUTPUT"
        
  push_tag_name:
    runs-on: ubuntu-latest
    needs: bump_tag
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - name: Create version
        run: git tag ${{needs.bump_tag.outputs.final_tag}}
      - name: Commit report
        run: |
          git config --global user.name 'waddah'
          git config --global user.email 'waddah.t.ahmad@gmail.com'
          git push origin ${{needs.bump_tag.outputs.final_tag}}

  check_status:
    runs-on: ubuntu-latest
    needs: [bump_tag,push_tag_name,extract_tag]
    steps:
      - name: Check Job Status
        run: |
          echo "Good"
  tagged-release:
    name: "Tagged Release"
    runs-on: "ubuntu-latest"
    needs: [check_status]
    steps:
      - uses: "marvinpinto/action-automatic-releases@latest"
        with:
          repo_token: "${{ secrets.PAT }}"
          prerelease: false
          files: |
            *
            
  send_notification:
    runs-on: ubuntu-latest
    outputs:
      old_tag: ${{ steps.vars.outputs.previous_version }}
      sha_short: ${{ steps.vars.outputs.sha_short }}
      current_version: ${{ steps.vars.outputs.current_version }}
    needs: [bump_tag,push_tag_name,extract_tag,check_status]
    if: always()
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
          
      - name: Set outputs
        id: vars
        run: |
          echo "sha_short=$(git rev-parse --short HEAD)" >> $GITHUB_OUTPUT
          echo "previous_version=$(git describe --tags --always $(git rev-list --tags --max-count=2 | tail -n 1))" >> $GITHUB_OUTPUT
          echo "current_version=$(git describe --tags --always $(git rev-list --tags --max-count=1))" >> "$GITHUB_OUTPUT"
          
      - name: Check outputs
        run: |
          echo ${{ steps.vars.outputs.sha_short }}
          echo ${{ steps.vars.outputs.previous_version }}
          echo ${{ steps.vars.outputs.current_version }}
        
      - name: run workflow1
        if: needs.check_status.result == 'success'
        uses: ./.github/workflows/notifications
        with:
          old_version: ${{ needs.extract_tag.outputs.old_tag }}
          version: ${{needs.bump_tag.outputs.final_tag}}
          commit_hash: ${{ steps.vars.outputs.sha_short }}
          repository: ${{ github.repository }}
          sender: ${{ github.triggering_actor }}
          status: "Success"
          app_name: ${{ inputs.upgrade_level }}
          CHANNEL: ${{env.CHANNEL}}

      - name: run workflow2
        if: needs.check_status.result != 'success'
        uses: ./.github/workflows/notifications
        with:
          old_version: ${{ needs.extract_tag.outputs.old_tag }}
          version: ${{needs.bump_tag.outputs.final_tag}}
          commit_hash: ${{ steps.vars.outputs.sha_short }}
          repository: ${{ github.repository }}
          sender: ${{ github.triggering_actor }}
          status: "Fail"
          app_name: ${{ inputs.upgrade_level }}
          CHANNEL: ${{env.CHANNEL}}
          workflow: ${{github.workflow}}
          commiter: ${{github.actor}}
          color: FF0000
